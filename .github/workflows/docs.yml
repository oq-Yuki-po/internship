name: OpenAPI and SchemaSpy Document Generator

on:
  workflow_call:
env:
  POSTGRES_USER: postgres
  POSTGRES_DB: sample
  POSTGRES_PASSWORD: postgres
  POSTGRES_SERVER: localhost
  POSTGRES_PORT: 5432
  PYTHONPATH: ${{ github.workspace }}
jobs:
  build-schemaspy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: ./.github/actions/setup
        with:
          python-version: 3.11
      - name: Build OpenAPI spec
        run: |
          python app/main.py
      - name: Checkout swagger-ui
        uses: actions/checkout@v3
        with:
          repository: swagger-api/swagger-ui
          ref: v4.15.5
          path: swagger-ui
      - name: Inject Swagger static files
        run: |
          mkdir pages
          mkdir pages/swagger-ui
          cp -r swagger-ui/dist/* pages/swagger-ui
      - name: Inject OpenAPI spec
        run: |
          cp openapi_1.0.yaml pages/swagger-ui/openapi_1.0.yaml
          cp docs/swagger-ui.html pages/swagger-ui/index.html
          cp docs/index.html pages/index.html
      - uses: actions/setup-java@v1
        with:
          java-version: '17-ea' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64
      - name: schemaSpy
        run: |
          mkdir pages/schemaspy
          wget https://github.com/schemaspy/schemaspy/releases/download/v6.2.2/schemaspy-6.2.2.jar -O schemaspy.jar
          cp .devcontainer/schemaspy/postgresql-42.4.0.jar ./
          java -version
          ls -l
          env
          java -jar schemaspy.jar -u ${POSTGRES_USER} \
                                  -host ${POSTGRES_SERVER} \
                                  -port ${POSTGRES_PORT} \
                                  -db ${POSTGRES_DB} \
                                  -p ${POSTGRES_PASSWORD} \
                                  -s public \
                                  -t pgsql11 \
                                  -o pages/schemaspy \
                                  -debug \
                                  -dp .devcontainer/schemaspy/postgresql-42.4.0.jar \
                                  -vizjs \
                                  -connprops useSSL\\\\=false
      - uses: actions/upload-artifact@v3
        with:
          name: fastapi_doc
          path: pages
      - uses: actions/upload-pages-artifact@v1
        with:
          path: pages
  deploy:
    needs: build-schemaspy
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v1
        id: deployment
