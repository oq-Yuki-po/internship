"""message

Revision ID: c7417f13d21e
Revises: b51bab782a92
Create Date: 2023-07-06 09:49:45.224202

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy import MetaData

# revision identifiers, used by Alembic.
revision = 'c7417f13d21e'
down_revision = 'b51bab782a92'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drive_sensors',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('drive_letter', sa.String(length=1), nullable=False, comment='drive letter'),
                    sa.Column('drive_type', sa.Enum('Unknown', 'NoRootDirectory', 'Removable', 'Fixed', 'Network', 'CDRom',
                                                    'Ram', name='drivetype', schema='public', metadata=MetaData()), nullable=False, comment='drive type'),
                    sa.Column('volume_name', sa.String(length=255), nullable=False, comment='volume name'),
                    sa.Column('file_system', sa.String(length=255), nullable=False, comment='file system'),
                    sa.Column('all_space', sa.String(length=16), nullable=False, comment='all space'),
                    sa.Column('free_space', sa.String(length=16), nullable=False, comment='free space'),
                    sa.Column('frame_id', sa.Integer(), nullable=False, comment='frame id'),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['frame_id'], ['public.frames.id'],
                                            name=op.f('fk_drive_sensors_frame_id_frames')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_drive_sensors')),
                    schema='public'
                    )
    op.create_table('ip_port_sensors',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('state', sa.Enum('listen', 'establish', name='ipporttype', schema='public',
                              metadata=MetaData()), nullable=False, comment='ip port type enum. listen or establish'),
                    sa.Column('ip', sa.String(length=39), nullable=False, comment='ip address'),
                    sa.Column('port', sa.Integer(), nullable=False, comment='port'),
                    sa.Column('process_id', sa.Integer(), nullable=False, comment='process id'),
                    sa.Column('remote_ip', sa.String(length=39), nullable=False, comment='remote ip address'),
                    sa.Column('remote_port', sa.Integer(), nullable=False, comment='remote port'),
                    sa.Column('frame_id', sa.Integer(), nullable=False, comment='frame id'),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['frame_id'], ['public.frames.id'],
                                            name=op.f('fk_ip_port_sensors_frame_id_frames')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_ip_port_sensors')),
                    schema='public'
                    )
    op.create_table('process_sensors',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('file_path', sa.String(length=255), nullable=False, comment='file path'),
                    sa.Column('process_name', sa.String(length=255), nullable=False, comment='process name'),
                    sa.Column('process_id', sa.Integer(), nullable=False, comment='process id'),
                    sa.Column('started_at', sa.DateTime(), nullable=False, comment='started at'),
                    sa.Column('frame_id', sa.Integer(), nullable=False, comment='frame id'),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['frame_id'], ['public.frames.id'],
                                            name=op.f('fk_process_sensors_frame_id_frames')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_process_sensors')),
                    schema='public'
                    )
    op.create_table('screenshot_sensors',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('image_path', sa.Text(), nullable=False, comment='file path'),
                    sa.Column('frame_id', sa.Integer(), nullable=False, comment='frame id'),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['frame_id'], ['public.frames.id'],
                                            name=op.f('fk_screenshot_sensors_frame_id_frames')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_screenshot_sensors')),
                    schema='public'
                    )
    op.drop_constraint('fk_frames_user_session_id_user_sessions', 'frames', type_='foreignkey')
    op.create_foreign_key(op.f('fk_frames_user_session_id_user_sessions'), 'frames', 'user_sessions', [
                          'user_session_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('fk_user_sessions_user_id_users', 'user_sessions', type_='foreignkey')
    op.create_foreign_key(op.f('fk_user_sessions_user_id_users'), 'user_sessions', 'users', [
                          'user_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_user_sessions_user_id_users'), 'user_sessions', schema='public', type_='foreignkey')
    op.create_foreign_key('fk_user_sessions_user_id_users', 'user_sessions', 'users', ['user_id'], ['id'])
    op.drop_constraint(op.f('fk_frames_user_session_id_user_sessions'), 'frames', schema='public', type_='foreignkey')
    op.create_foreign_key('fk_frames_user_session_id_user_sessions', 'frames',
                          'user_sessions', ['user_session_id'], ['id'])
    op.drop_table('screenshot_sensors', schema='public')
    op.drop_table('process_sensors', schema='public')
    op.drop_table('ip_port_sensors', schema='public')
    op.drop_table('drive_sensors', schema='public')
    # ### end Alembic commands ###
